-- ========== ユーザーの作成 ==========

-- dev_user: syllabus_db 読み取り専用
CREATE USER ${DEV_USER} WITH PASSWORD '${DEV_PASSWORD}';

-- app_user: syllabus_db 読み取り専用
CREATE USER ${APP_USER} WITH PASSWORD '${APP_PASSWORD}';

-- ========== データベースの作成 ==========

DO $$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_database WHERE datname = '${POSTGRES_DB}') THEN
        CREATE DATABASE ${POSTGRES_DB} OWNER postgres;
    END IF;
END
$$;

-- ========== 権限付与 ==========

-- データベース権限
GRANT ALL PRIVILEGES ON DATABASE ${POSTGRES_DB} TO ${DEV_USER};
GRANT CONNECT ON DATABASE ${POSTGRES_DB} TO ${APP_USER};

-- 接続切替（syllabus_db）
\connect ${POSTGRES_DB}

-- スキーマ権限
GRANT CONNECT ON DATABASE ${POSTGRES_DB} TO ${DEV_USER}, ${APP_USER};
GRANT USAGE ON SCHEMA public TO ${DEV_USER}, ${APP_USER};
GRANT ALL PRIVILEGES ON SCHEMA public TO ${DEV_USER};

-- テーブルとシーケンスの権限
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ${DEV_USER}, ${APP_USER};
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ${DEV_USER}, ${APP_USER};
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO ${DEV_USER};
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO ${DEV_USER};

-- デフォルト権限の設定
ALTER DEFAULT PRIVILEGES IN SCHEMA public
    GRANT SELECT ON TABLES TO ${DEV_USER}, ${APP_USER};
ALTER DEFAULT PRIVILEGES IN SCHEMA public
    GRANT USAGE, SELECT ON SEQUENCES TO ${DEV_USER}, ${APP_USER};
ALTER DEFAULT PRIVILEGES IN SCHEMA public
    GRANT ALL PRIVILEGES ON TABLES TO ${DEV_USER};
ALTER DEFAULT PRIVILEGES IN SCHEMA public
    GRANT ALL PRIVILEGES ON SEQUENCES TO ${DEV_USER};

-- カタログ参照権限
GRANT SELECT ON pg_catalog.pg_tables TO ${DEV_USER}, ${APP_USER};
GRANT SELECT ON information_schema.tables TO ${DEV_USER}, ${APP_USER};

-- ========== テーブル作成（syllabus_db） ==========

-- class（科目区分）
CREATE TABLE IF NOT EXISTS class (
    class_id SERIAL PRIMARY KEY,
    class_name TEXT NOT NULL UNIQUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_class_name ON class(class_name);

-- subclass（科目小区分）
CREATE TABLE IF NOT EXISTS subclass (
    subclass_id SERIAL PRIMARY KEY,
    subclass_name TEXT NOT NULL UNIQUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- faculty（開講学部・課程）
CREATE TABLE IF NOT EXISTS faculty (
    faculty_id SERIAL PRIMARY KEY,
    faculty_name TEXT NOT NULL UNIQUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_faculty_name ON faculty(faculty_name);

-- subject_name（科目名マスタ）
CREATE TABLE IF NOT EXISTS subject_name (
    subject_name_id SERIAL PRIMARY KEY,
    name TEXT NOT NULL UNIQUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- instructor（教員）
CREATE TABLE IF NOT EXISTS instructor (
    instructor_id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    name_kana TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_instructor_name ON instructor(name);
CREATE INDEX IF NOT EXISTS idx_instructor_name_kana ON instructor(name_kana);

-- book（書籍）
CREATE TABLE IF NOT EXISTS book (
    book_id SERIAL PRIMARY KEY,
    title TEXT NOT NULL,
    author TEXT,
    publisher TEXT,
    price INTEGER,
    isbn TEXT UNIQUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_book_title ON book(title);
CREATE INDEX IF NOT EXISTS idx_book_isbn ON book(isbn);

-- syllabus_master（シラバスマスタ）
CREATE TABLE IF NOT EXISTS syllabus_master (
    syllabus_id SERIAL PRIMARY KEY,
    syllabus_code TEXT NOT NULL,
    syllabus_year INTEGER NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP,
    UNIQUE(syllabus_code, syllabus_year)
);

CREATE INDEX IF NOT EXISTS idx_syllabus_master_code ON syllabus_master(syllabus_code);
CREATE INDEX IF NOT EXISTS idx_syllabus_master_year ON syllabus_master(syllabus_year);

-- book_uncategorized（未分類書籍）
CREATE TABLE IF NOT EXISTS book_uncategorized (
    id SERIAL PRIMARY KEY,
    syllabus_id INTEGER NOT NULL REFERENCES syllabus_master(syllabus_id) ON DELETE CASCADE,
    title TEXT NOT NULL,
    author TEXT,
    publisher TEXT,
    price INTEGER,
    role TEXT NOT NULL,
    isbn TEXT,
    categorization_status TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_book_uncategorized_syllabus ON book_uncategorized(syllabus_id);
CREATE INDEX IF NOT EXISTS idx_book_uncategorized_title ON book_uncategorized(title);
CREATE INDEX IF NOT EXISTS idx_book_uncategorized_isbn ON book_uncategorized(isbn);
CREATE INDEX IF NOT EXISTS idx_book_uncategorized_status ON book_uncategorized(categorization_status);

-- syllabus（シラバス情報）
CREATE TABLE IF NOT EXISTS syllabus (
    syllabus_id INTEGER PRIMARY KEY REFERENCES syllabus_master(syllabus_id) ON DELETE CASCADE,
    subject_name_id INTEGER NOT NULL REFERENCES subject_name(subject_name_id) ON DELETE CASCADE,
    subtitle TEXT,
    term TEXT NOT NULL,
    campus TEXT NOT NULL,
    credits INTEGER NOT NULL,
    goals TEXT,
    summary TEXT,
    attainment TEXT,
    methods TEXT,
    outside_study TEXT,
    textbook_comment TEXT,
    reference_comment TEXT,
    grading_comment TEXT,
    advice TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_syllabus_term ON syllabus(term);
CREATE INDEX IF NOT EXISTS idx_syllabus_campus ON syllabus(campus);
CREATE INDEX IF NOT EXISTS idx_syllabus_subject_name ON syllabus(subject_name_id);

-- subject_grade（科目履修可能学年）
CREATE TABLE IF NOT EXISTS subject_grade (
    id SERIAL PRIMARY KEY,
    syllabus_id INTEGER NOT NULL REFERENCES syllabus_master(syllabus_id) ON DELETE CASCADE,
    grade TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP,
    UNIQUE(syllabus_id, grade)
);

CREATE INDEX IF NOT EXISTS idx_subject_grade_grade ON subject_grade(grade);
CREATE INDEX IF NOT EXISTS idx_subject_grade_syllabus ON subject_grade(syllabus_id);

-- lecture_time（講義時間）
CREATE TABLE IF NOT EXISTS lecture_time (
    id SERIAL PRIMARY KEY,
    syllabus_id INTEGER NOT NULL REFERENCES syllabus_master(syllabus_id) ON DELETE CASCADE,
    day_of_week TEXT NOT NULL,
    period SMALLINT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP,
    UNIQUE(syllabus_id, day_of_week, period)
);

CREATE INDEX IF NOT EXISTS idx_lecture_time_day_period ON lecture_time(day_of_week, period);
CREATE INDEX IF NOT EXISTS idx_lecture_time_syllabus ON lecture_time(syllabus_id);

-- lecture_session（講義回数）
CREATE TABLE IF NOT EXISTS lecture_session (
    lecture_session_id SERIAL PRIMARY KEY,
    syllabus_id INTEGER NOT NULL REFERENCES syllabus_master(syllabus_id) ON DELETE CASCADE,
    session_number INTEGER NOT NULL,
    contents TEXT,
    other_info TEXT,
    lecture_format TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP,
    UNIQUE(syllabus_id, session_number)
);

CREATE INDEX IF NOT EXISTS idx_lecture_session_syllabus ON lecture_session(syllabus_id);
CREATE INDEX IF NOT EXISTS idx_lecture_session_number ON lecture_session(session_number);

-- lecture_session_irregular（不定形講義回数）
CREATE TABLE IF NOT EXISTS lecture_session_irregular (
    lecture_session_irregular_id SERIAL PRIMARY KEY,
    syllabus_id INTEGER NOT NULL REFERENCES syllabus_master(syllabus_id) ON DELETE CASCADE,
    session_pattern TEXT NOT NULL,
    contents TEXT,
    other_info TEXT,
    instructor TEXT,
    error_message TEXT NOT NULL,
    lecture_format TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP
);

CREATE INDEX IF NOT EXISTS idx_lecture_session_irregular_syllabus ON lecture_session_irregular(syllabus_id);
CREATE INDEX IF NOT EXISTS idx_lecture_session_irregular_pattern ON lecture_session_irregular(session_pattern);

-- syllabus_instructor（シラバス教員関連）
CREATE TABLE IF NOT EXISTS syllabus_instructor (
    id SERIAL PRIMARY KEY,
    syllabus_id INTEGER NOT NULL REFERENCES syllabus_master(syllabus_id) ON DELETE CASCADE,
    instructor_id INTEGER NOT NULL REFERENCES instructor(instructor_id) ON DELETE CASCADE,
    role TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP,
    UNIQUE(syllabus_id, instructor_id)
);

CREATE INDEX IF NOT EXISTS idx_syllabus_instructor_syllabus ON syllabus_instructor(syllabus_id);
CREATE INDEX IF NOT EXISTS idx_syllabus_instructor_instructor ON syllabus_instructor(instructor_id);

-- lecture_session_instructor（講義回数担当者）
CREATE TABLE IF NOT EXISTS lecture_session_instructor (
    id SERIAL PRIMARY KEY,
    lecture_session_id INTEGER NOT NULL REFERENCES lecture_session(lecture_session_id) ON DELETE CASCADE,
    instructor_id INTEGER NOT NULL REFERENCES instructor(instructor_id) ON DELETE CASCADE,
    role TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP,
    UNIQUE(lecture_session_id, instructor_id)
);

CREATE INDEX IF NOT EXISTS idx_lecture_session_instructor_session ON lecture_session_instructor(lecture_session_id);
CREATE INDEX IF NOT EXISTS idx_lecture_session_instructor_instructor ON lecture_session_instructor(instructor_id);

-- syllabus_book（シラバス教科書関連）
CREATE TABLE IF NOT EXISTS syllabus_book (
    id SERIAL PRIMARY KEY,
    syllabus_id INTEGER NOT NULL REFERENCES syllabus_master(syllabus_id) ON DELETE CASCADE,
    book_id INTEGER NOT NULL REFERENCES book(book_id) ON DELETE CASCADE,
    role TEXT NOT NULL,
    note TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(syllabus_id, book_id)
);

CREATE INDEX IF NOT EXISTS idx_syllabus_book_syllabus ON syllabus_book(syllabus_id);
CREATE INDEX IF NOT EXISTS idx_syllabus_book_book ON syllabus_book(book_id);

-- grading_criterion（成績評価基準）
CREATE TABLE IF NOT EXISTS grading_criterion (
    id SERIAL PRIMARY KEY,
    syllabus_id INTEGER NOT NULL REFERENCES syllabus_master(syllabus_id) ON DELETE CASCADE,
    criteria_type TEXT NOT NULL,
    criteria_description TEXT,
    ratio INTEGER,
    note TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(syllabus_id, criteria_type)
);

CREATE INDEX IF NOT EXISTS idx_grading_criterion_type ON grading_criterion(criteria_type);
CREATE INDEX IF NOT EXISTS idx_grading_criterion_syllabus ON grading_criterion(syllabus_id);

-- subject_attribute（科目属性）
CREATE TABLE IF NOT EXISTS subject_attribute (
    attribute_id SERIAL PRIMARY KEY,
    attribute_name TEXT NOT NULL UNIQUE,
    description TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- subject（科目基本情報）
CREATE TABLE IF NOT EXISTS subject (
    subject_id SERIAL PRIMARY KEY,
    subject_name_id INTEGER NOT NULL REFERENCES subject_name(subject_name_id) ON DELETE RESTRICT,
    faculty_id INTEGER NOT NULL REFERENCES faculty(faculty_id) ON DELETE RESTRICT,
    curriculum_year INTEGER NOT NULL,
    class_id INTEGER NOT NULL REFERENCES class(class_id) ON DELETE RESTRICT,
    subclass_id INTEGER REFERENCES subclass(subclass_id) ON DELETE RESTRICT,
    requirement_type TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP,
    UNIQUE(subject_name_id, faculty_id, class_id, subclass_id, curriculum_year)
);

CREATE INDEX IF NOT EXISTS idx_subject_subject_name ON subject(subject_name_id);
CREATE INDEX IF NOT EXISTS idx_subject_class ON subject(class_id);
CREATE INDEX IF NOT EXISTS idx_subject_faculty ON subject(faculty_id);
CREATE INDEX IF NOT EXISTS idx_subject_curriculum_year ON subject(curriculum_year);

-- subject_attribute_value（科目属性値）
CREATE TABLE IF NOT EXISTS subject_attribute_value (
    id SERIAL PRIMARY KEY,
    subject_id INTEGER NOT NULL REFERENCES subject(subject_id) ON DELETE CASCADE,
    attribute_id INTEGER NOT NULL REFERENCES subject_attribute(attribute_id) ON DELETE RESTRICT,
    value TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP,
    UNIQUE(subject_id, attribute_id, value)
);

CREATE INDEX IF NOT EXISTS idx_subject_attribute_value_subject ON subject_attribute_value(subject_id);
CREATE INDEX IF NOT EXISTS idx_subject_attribute_value_attribute ON subject_attribute_value(attribute_id);

-- syllabus_faculty（シラバス学部関連）
CREATE TABLE IF NOT EXISTS syllabus_faculty (
    id SERIAL PRIMARY KEY,
    syllabus_id INTEGER NOT NULL REFERENCES syllabus_master(syllabus_id) ON DELETE CASCADE,
    faculty_id INTEGER NOT NULL REFERENCES faculty(faculty_id) ON DELETE CASCADE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP,
    UNIQUE(syllabus_id, faculty_id)
);

CREATE INDEX IF NOT EXISTS idx_syllabus_faculty_syllabus ON syllabus_faculty(syllabus_id);
CREATE INDEX IF NOT EXISTS idx_syllabus_faculty_faculty ON syllabus_faculty(faculty_id);

-- syllabus_study_system（シラバス系統的履修）
CREATE TABLE IF NOT EXISTS syllabus_study_system (
    id SERIAL PRIMARY KEY,
    source_syllabus_id INTEGER NOT NULL REFERENCES syllabus_master(syllabus_id) ON DELETE CASCADE,
    target TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP,
    UNIQUE(source_syllabus_id, target)
);

CREATE INDEX IF NOT EXISTS idx_syllabus_study_system_source ON syllabus_study_system(source_syllabus_id);
CREATE INDEX IF NOT EXISTS idx_syllabus_study_system_target ON syllabus_study_system(target);

-- ========== マイグレーションファイルの実行 ==========

-- （この部分はgenerate-init.shで自動挿入されます）
